/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{-webkit-text-size-adjust:100%;line-height:1.15}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}html{box-sizing:border-box;font-size:62.5%}*,:after,:before{box-sizing:inherit}body{background-color:#f0f0f0;font-family:Roboto,sans-serif;font-size:1.6rem}p{color:#000;font-size:2rem}.container{margin:0 auto;max-width:1200px;width:95%}a{color:#000;text-decoration:none}img{display:block;max-width:100%}ul{list-style:none;margin:0;padding:0}.header{background-image:linear-gradient(90deg,rgba(59,72,98,.9) 0,rgba(59,72,98,.9)),url(../img/header_bg.jpg);background-position:50%;background-repeat:no-repeat;background-size:cover;padding:3rem 0;position:relative}@media (min-width:768px){.header{padding:3rem 0 20rem}}.header__bar{align-items:center;display:flex;flex-direction:column}@media (min-width:768px){.header__bar{flex-direction:row;justify-content:space-between}}.header__logo{width:25rem}@media (min-width:768px){.header__content{margin-top:10rem;max-width:50rem}}.header__heading{color:#fff;text-align:center}@media (min-width:768px){.header__heading{text-align:left}}.header__text{color:#fff;display:none}@media (min-width:768px){.header__text{display:block}}.header__image{border-bottom-left-radius:2rem;border-top-left-radius:2rem;display:none}@media (min-width:768px){.header__image{bottom:-5rem;display:block;max-width:35rem;position:absolute;right:0}}@media (min-width:1200px){.header__image{max-width:60rem}}.nav{align-items:center;display:flex;flex-direction:column;margin-top:3rem}@media (min-width:768px){.nav{flex-direction:row;gap:2rem;margin-top:0}}.nav__link{color:#fff;font-size:1.8rem;margin-bottom:2rem}.nav__link:last-of-type{margin-bottom:0}@media (min-width:768px){.nav__link{margin-bottom:0}}.properties{margin-top:5rem}@media (min-width:768px){.properties{margin-top:10rem}}.properties__heading{font-weight:400}.properties__heading span{font-weight:700}.properties__heading:after{background-image:linear-gradient(90deg,#3b4862 0,#3b4862 50%,#6277a1 0,#6277a1);content:"";display:block;height:1rem;margin-top:1rem;width:15rem}.properties__grid{display:grid;gap:2rem;grid-template-columns:repeat(1,1fr)}@media (min-width:768px){.properties__grid{display:grid;gap:2rem;grid-template-columns:repeat(3,1fr)}}.propertie{background-color:#fff}.propertie__img{aspect-ratio:10/6;background-size:cover;position:relative}.propertie:first-child .propertie__img{background-image:linear-gradient(180deg,transparent 0,rgba(0,0,0,.7)),url(../img/propiedad_1.jpg)}.propertie:nth-child(2) .propertie__img{background-image:linear-gradient(180deg,transparent 0,rgba(0,0,0,.7)),url(../img/propiedad_2.jpg)}.propertie:nth-child(3) .propertie__img{background-image:linear-gradient(180deg,transparent 0,rgba(0,0,0,.7)),url(../img/propiedad_3.jpg)}.propertie:nth-child(4) .propertie__img{background-image:linear-gradient(180deg,transparent 0,rgba(0,0,0,.7)),url(../img/propiedad_4.jpg)}.propertie:nth-child(5) .propertie__img{background-image:linear-gradient(180deg,transparent 0,rgba(0,0,0,.7)),url(../img/propiedad_5.jpg)}.propertie:nth-child(6) .propertie__img{background-image:linear-gradient(180deg,transparent 0,rgba(0,0,0,.7)),url(../img/propiedad_6.jpg)}.propertie__name{bottom:1rem;color:#fff;font-size:2.4rem;left:1rem;position:absolute}.propertie__content{padding:2rem}.propertie__text{margin-bottom:0}.propertie__price{font-size:3rem;font-weight:700;margin:1rem 0}.propertie__link{background-color:#3b4862;border:none;border-radius:1rem;color:#fff;display:block;font-size:2rem;font-weight:700;padding:1.2rem 3rem;text-align:center;text-decoration:none;text-transform:uppercase;transition:background-color .3s ease;width:100%}.propertie__link:hover{background-color:#283142;cursor:pointer}@media (min-width:768px){.propertie__link{width:auto}}.best{background-image:linear-gradient(180deg,transparent 0,transparent 50%,#3b4862 0,#3b4862),url(../img/destacada.jpg);background-position:50%,-50rem -30rem;background-repeat:no-repeat;background-size:100%,cover;margin-top:5rem}@media (min-width:768px){.best{background-image:linear-gradient(90deg,transparent 0,transparent 50%,#3b4862 0,#3b4862),url(../img/destacada.jpg);background-position:50%,-50rem}}.best__grid{display:grid;grid-template-rows:repeat(2,1fr)}@media (min-width:768px){.best__grid{display:grid;gap:2rem;grid-template-columns:repeat(2,1fr);grid-template-rows:unset}}.best__content{grid-row:2/3;padding:5rem}@media (min-width:768px){.best__content{grid-column:2/3}}.best__heading{color:#fff;text-transform:uppercase}.best__text{color:#fff;font-size:1.8rem}.best__price{color:#fff;font-size:2.4rem;font-weight:700}.best__link{background-color:#fff;border:none;border-radius:1rem;color:#3b4862;display:block;font-size:2rem;font-weight:700;padding:1.2rem 3rem;text-align:center;text-decoration:none;transition:background-color .3s ease;width:100%}.best__link:hover{background-color:#e6e6e6;cursor:pointer}@media (min-width:768px){.best__link{width:auto}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
